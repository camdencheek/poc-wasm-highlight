<table><tbody><tr><td class="line" data-line="1"></td><td class="code"><div><span style="color:#859900;">package </span><span style="color:#268bd2;">search</span></div></td></tr><tr><td class="line" data-line="2"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="3"></td><td class="code"><div><span style="color:#cb4b16;">import </span><span style="color:#657b83;">(</span></div></td></tr><tr><td class="line" data-line="4"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">archive/zip</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="5"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">context</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="6"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">errors</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="7"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">io</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="8"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">regexp/syntax</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="9"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">sync</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="10"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">sync/atomic</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="11"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">time</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="12"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="13"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/google/zoekt</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="14"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="15"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/actor</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="16"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/api</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="17"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/comby</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="18"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="19"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">zoektquery </span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/google/zoekt/query</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="20"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">zoektrpc </span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/google/zoekt/rpc</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="21"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/opentracing/opentracing-go/log</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="22"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="23"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/search</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="24"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/search/backend</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="25"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">zoektutil </span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/search/zoekt</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="26"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/trace</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="27"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">github.com/sourcegraph/sourcegraph/internal/trace/ot</span><span style="color:#839496;">&#34;</span></div></td></tr><tr><td class="line" data-line="28"></td><td class="code"><div><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="29"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="30"></td><td class="code"><div><span style="color:#268bd2;">var zoektOnce sync</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Once</span></div></td></tr><tr><td class="line" data-line="31"></td><td class="code"><div><span style="color:#268bd2;">var endpointMap atomicEndpoints</span></div></td></tr><tr><td class="line" data-line="32"></td><td class="code"><div><span style="color:#268bd2;">var zoektClient zoekt</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Streamer</span></div></td></tr><tr><td class="line" data-line="33"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="34"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#b58900;">getZoektClient</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">indexerEndpoints []</span><span style="color:#859900;">string</span><span style="color:#657b83;">) </span><span style="color:#268bd2;">zoekt</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Streamer </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="35"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">zoektOnce</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Do</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">func</span><span style="color:#657b83;">() {</span></div></td></tr><tr><td class="line" data-line="36"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">dial </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">func</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoint </span><span style="color:#859900;">string</span><span style="color:#657b83;">) </span><span style="color:#268bd2;">zoekt</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Streamer </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="37"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#268bd2;">backend</span><span style="color:#657b83;">.</span><span style="color:#b58900;">NewMeteredSearcher</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoint</span><span style="color:#657b83;">, </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">backend</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">StreamSearchAdapter</span><span style="color:#657b83;">{</span><span style="color:#268bd2;">zoektrpc</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Client</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoint</span><span style="color:#657b83;">)})</span></div></td></tr><tr><td class="line" data-line="38"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="39"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">zoektClient </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">backend</span><span style="color:#657b83;">.</span><span style="color:#b58900;">NewMeteredSearcher</span><span style="color:#657b83;">(</span></div></td></tr><tr><td class="line" data-line="40"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#839496;">&#34;&#34;</span><span style="color:#657b83;">, </span><span style="color:#767676;">// no hostname means its the aggregator</span></div></td></tr><tr><td class="line" data-line="41"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">backend</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">HorizontalSearcher</span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="42"></td><td class="code"><div><span style="color:#657b83;">				</span><span style="color:#268bd2;">Map</span><span style="color:#657b83;">:  </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">endpointMap</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="43"></td><td class="code"><div><span style="color:#657b83;">				</span><span style="color:#268bd2;">Dial</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">dial</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="44"></td><td class="code"><div><span style="color:#657b83;">			},</span></div></td></tr><tr><td class="line" data-line="45"></td><td class="code"><div><span style="color:#657b83;">		)</span></div></td></tr><tr><td class="line" data-line="46"></td><td class="code"><div><span style="color:#657b83;">	})</span></div></td></tr><tr><td class="line" data-line="47"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">endpointMap</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Set</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">indexerEndpoints</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="48"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#268bd2;">zoektClient</span></div></td></tr><tr><td class="line" data-line="49"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="50"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="51"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#b58900;">HandleFilePathPatterns</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">query </span><span style="color:#859900;">*</span><span style="color:#268bd2;">search</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">TextPatternInfo</span><span style="color:#657b83;">) (</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Q</span><span style="color:#657b83;">, </span><span style="color:#859900;">error</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="52"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">var and []zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Q</span></div></td></tr><tr><td class="line" data-line="53"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="54"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// Zoekt uses regular expressions for file paths.</span></div></td></tr><tr><td class="line" data-line="55"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// Unhandled cases: PathPatternsAreCaseSensitive and whitespace in file path patterns.</span></div></td></tr><tr><td class="line" data-line="56"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">for </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">p </span><span style="color:#657b83;">:= </span><span style="color:#859900;">range </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">IncludePatterns </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="57"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zoektutil</span><span style="color:#657b83;">.</span><span style="color:#b58900;">FileRe</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">p</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">IsCaseSensitive</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="58"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="59"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="60"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="61"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">and </span><span style="color:#657b83;">= </span><span style="color:#859900;">append</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">and</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">q</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="62"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="63"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">ExcludePattern </span><span style="color:#859900;">!= </span><span style="color:#839496;">&#34;&#34; </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="64"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zoektutil</span><span style="color:#657b83;">.</span><span style="color:#b58900;">FileRe</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">ExcludePattern</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">IsCaseSensitive</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="65"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="66"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="67"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="68"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">and </span><span style="color:#657b83;">= </span><span style="color:#859900;">append</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">and</span><span style="color:#657b83;">, </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Not</span><span style="color:#657b83;">{</span><span style="color:#268bd2;">Child</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">q</span><span style="color:#657b83;">})</span></div></td></tr><tr><td class="line" data-line="69"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="70"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="71"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// For conditionals that happen on a repo we can use type:repo queries. eg</span></div></td></tr><tr><td class="line" data-line="72"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// (type:repo file:foo) (type:repo file:bar) will match all repos which</span></div></td></tr><tr><td class="line" data-line="73"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// contain a filename matching &#34;foo&#34; and a filename matchinb &#34;bar&#34;.</span></div></td></tr><tr><td class="line" data-line="74"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">//</span></div></td></tr><tr><td class="line" data-line="75"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// Note: (type:repo file:foo file:bar) will only find repos with a</span></div></td></tr><tr><td class="line" data-line="76"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// filename containing both &#34;foo&#34; and &#34;bar&#34;.</span></div></td></tr><tr><td class="line" data-line="77"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">for </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">p </span><span style="color:#657b83;">:= </span><span style="color:#859900;">range </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FilePatternsReposMustInclude </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="78"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zoektutil</span><span style="color:#657b83;">.</span><span style="color:#b58900;">FileRe</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">p</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">IsCaseSensitive</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="79"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="80"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="81"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="82"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">and </span><span style="color:#657b83;">= </span><span style="color:#859900;">append</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">and</span><span style="color:#657b83;">, </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Type</span><span style="color:#657b83;">{</span><span style="color:#268bd2;">Type</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">TypeRepo</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">Child</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">q</span><span style="color:#657b83;">})</span></div></td></tr><tr><td class="line" data-line="83"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="84"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">for </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">p </span><span style="color:#657b83;">:= </span><span style="color:#859900;">range </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FilePatternsReposMustExclude </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="85"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zoektutil</span><span style="color:#657b83;">.</span><span style="color:#b58900;">FileRe</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">p</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">query</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">IsCaseSensitive</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="86"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="87"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="88"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="89"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">and </span><span style="color:#657b83;">= </span><span style="color:#859900;">append</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">and</span><span style="color:#657b83;">, </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Not</span><span style="color:#657b83;">{</span><span style="color:#268bd2;">Child</span><span style="color:#657b83;">: </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Type</span><span style="color:#657b83;">{</span><span style="color:#268bd2;">Type</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">TypeRepo</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">Child</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">q</span><span style="color:#657b83;">}})</span></div></td></tr><tr><td class="line" data-line="90"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="91"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="92"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#b58900;">NewAnd</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">and</span><span style="color:#859900;">...</span><span style="color:#657b83;">), </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="93"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="94"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="95"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#b58900;">buildQuery</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">args </span><span style="color:#859900;">*</span><span style="color:#268bd2;">search</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">TextPatternInfo</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">repoBranches map[</span><span style="color:#859900;">string</span><span style="color:#268bd2;">][]</span><span style="color:#859900;">string</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">filePathPatterns zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Q</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">shortcircuit </span><span style="color:#859900;">bool</span><span style="color:#657b83;">) (</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Q</span><span style="color:#657b83;">, </span><span style="color:#859900;">error</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="96"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">regexString </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">comby</span><span style="color:#657b83;">.</span><span style="color:#b58900;">StructuralPatToRegexpQuery</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">args</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Pattern</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">shortcircuit</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="97"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">regexString</span><span style="color:#657b83;">) </span><span style="color:#859900;">== </span><span style="color:#6c71c4;">0 </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="98"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return &amp;</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Const</span><span style="color:#657b83;">{</span><span style="color:#268bd2;">Value</span><span style="color:#657b83;">: </span><span style="color:#b58900;">true</span><span style="color:#657b83;">}, </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="99"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="100"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">re</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">syntax</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Parse</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">regexString</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">syntax</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">ClassNL</span><span style="color:#859900;">|</span><span style="color:#268bd2;">syntax</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">PerlX</span><span style="color:#859900;">|</span><span style="color:#268bd2;">syntax</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">UnicodeGroups</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="101"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="102"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="103"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="104"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#b58900;">NewAnd</span><span style="color:#657b83;">(</span></div></td></tr><tr><td class="line" data-line="105"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">RepoBranches</span><span style="color:#657b83;">{</span><span style="color:#268bd2;">Set</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">repoBranches</span><span style="color:#657b83;">},</span></div></td></tr><tr><td class="line" data-line="106"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">filePathPatterns</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="107"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">zoektquery</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Regexp</span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="108"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#268bd2;">Regexp</span><span style="color:#657b83;">:        </span><span style="color:#268bd2;">re</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="109"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#268bd2;">CaseSensitive</span><span style="color:#657b83;">: </span><span style="color:#b58900;">true</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="110"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#268bd2;">Content</span><span style="color:#657b83;">:       </span><span style="color:#b58900;">true</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="111"></td><td class="code"><div><span style="color:#657b83;">		},</span></div></td></tr><tr><td class="line" data-line="112"></td><td class="code"><div><span style="color:#657b83;">	), </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="113"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="114"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="115"></td><td class="code"><div><span style="color:#268bd2;">type </span><span style="color:#b58900;">zoektSearchStreamEvent </span><span style="color:#268bd2;">struct </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="116"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">fm       []zoekt</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FileMatch</span></div></td></tr><tr><td class="line" data-line="117"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">limitHit </span><span style="color:#859900;">bool</span></div></td></tr><tr><td class="line" data-line="118"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">partial  map[api</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">RepoID]struct</span><span style="color:#657b83;">{}</span></div></td></tr><tr><td class="line" data-line="119"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">err      </span><span style="color:#859900;">error</span></div></td></tr><tr><td class="line" data-line="120"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="121"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="122"></td><td class="code"><div><span style="color:#268bd2;">const defaultMaxSearchResults </span><span style="color:#657b83;">= </span><span style="color:#6c71c4;">30</span></div></td></tr><tr><td class="line" data-line="123"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="124"></td><td class="code"><div><span style="color:#767676;">// zoektSearch searches repositories using zoekt, returning file contents for</span></div></td></tr><tr><td class="line" data-line="125"></td><td class="code"><div><span style="color:#767676;">// files that match the given pattern.</span></div></td></tr><tr><td class="line" data-line="126"></td><td class="code"><div><span style="color:#767676;">//</span></div></td></tr><tr><td class="line" data-line="127"></td><td class="code"><div><span style="color:#767676;">// Timeouts are reported through the context, and as a special case errNoResultsInTimeout</span></div></td></tr><tr><td class="line" data-line="128"></td><td class="code"><div><span style="color:#767676;">// is returned if no results are found in the given timeout (instead of the more common</span></div></td></tr><tr><td class="line" data-line="129"></td><td class="code"><div><span style="color:#767676;">// case of finding partial or full results in the given timeout).</span></div></td></tr><tr><td class="line" data-line="130"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#b58900;">zoektSearch</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">ctx context</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Context</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">args </span><span style="color:#859900;">*</span><span style="color:#268bd2;">search</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">TextPatternInfo</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">repoBranches map[</span><span style="color:#859900;">string</span><span style="color:#268bd2;">][]</span><span style="color:#859900;">string</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">since func</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">t time</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Time</span><span style="color:#657b83;">) </span><span style="color:#268bd2;">time</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Duration</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">endpoints []</span><span style="color:#859900;">string</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">useFullDeadline </span><span style="color:#859900;">bool</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">c chan</span><span style="color:#859900;">&lt;- </span><span style="color:#268bd2;">zoektSearchStreamEvent</span><span style="color:#657b83;">) (</span><span style="color:#268bd2;">fm []zoekt</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FileMatch</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">limitHit </span><span style="color:#859900;">bool</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">partial map[api</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">RepoID]struct</span><span style="color:#657b83;">{}, </span><span style="color:#268bd2;">err </span><span style="color:#859900;">error</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="131"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">defer </span><span style="color:#268bd2;">func</span><span style="color:#657b83;">() {</span></div></td></tr><tr><td class="line" data-line="132"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">c </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="133"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#268bd2;">c </span><span style="color:#859900;">&lt;- </span><span style="color:#268bd2;">zoektSearchStreamEvent</span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="134"></td><td class="code"><div><span style="color:#657b83;">				</span><span style="color:#268bd2;">fm</span><span style="color:#657b83;">:       </span><span style="color:#268bd2;">fm</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="135"></td><td class="code"><div><span style="color:#657b83;">				</span><span style="color:#268bd2;">limitHit</span><span style="color:#657b83;">: </span><span style="color:#268bd2;">limitHit</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="136"></td><td class="code"><div><span style="color:#657b83;">				</span><span style="color:#268bd2;">partial</span><span style="color:#657b83;">:  </span><span style="color:#268bd2;">partial</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="137"></td><td class="code"><div><span style="color:#657b83;">				</span><span style="color:#268bd2;">err</span><span style="color:#657b83;">:      </span><span style="color:#268bd2;">err</span><span style="color:#657b83;">,</span></div></td></tr><tr><td class="line" data-line="138"></td><td class="code"><div><span style="color:#657b83;">			}</span></div></td></tr><tr><td class="line" data-line="139"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="140"></td><td class="code"><div><span style="color:#657b83;">	}()</span></div></td></tr><tr><td class="line" data-line="141"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">repoBranches</span><span style="color:#657b83;">) </span><span style="color:#859900;">== </span><span style="color:#6c71c4;">0 </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="142"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="143"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="144"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="145"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// Choose sensible values for k when we generalize this.</span></div></td></tr><tr><td class="line" data-line="146"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">k </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zoektutil</span><span style="color:#657b83;">.</span><span style="color:#b58900;">ResultCountFactor</span><span style="color:#657b83;">(</span><span style="color:#859900;">len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">repoBranches</span><span style="color:#657b83;">), </span><span style="color:#268bd2;">args</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FileMatchLimit</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="147"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">searchOpts </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zoektutil</span><span style="color:#657b83;">.</span><span style="color:#b58900;">SearchOpts</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">ctx</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">k</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">args</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="148"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">searchOpts</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Whole </span><span style="color:#657b83;">= </span><span style="color:#b58900;">true</span></div></td></tr><tr><td class="line" data-line="149"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="150"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// TODO(@camdencheek) TODO(@rvantonder) handle &#34;timeout:...&#34; values in this context.</span></div></td></tr><tr><td class="line" data-line="151"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">useFullDeadline </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="152"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">// If the user manually specified a timeout, allow zoekt to use all of the remaining timeout.</span></div></td></tr><tr><td class="line" data-line="153"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">deadline</span><span style="color:#657b83;">, </span><span style="color:#d33682;">_ </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">ctx</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Deadline</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="154"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">searchOpts</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">MaxWallTime </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">time</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Until</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">deadline</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="155"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="156"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">// We don&#39;t want our context&#39;s deadline to cut off zoekt so that we can get the results</span></div></td></tr><tr><td class="line" data-line="157"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">// found before the deadline.</span></div></td></tr><tr><td class="line" data-line="158"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">//</span></div></td></tr><tr><td class="line" data-line="159"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">// We&#39;ll create a new context that gets cancelled if the other context is cancelled for any</span></div></td></tr><tr><td class="line" data-line="160"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">// reason other than the deadline being exceeded. This essentially means the deadline for the new context</span></div></td></tr><tr><td class="line" data-line="161"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">// will be `deadline + time for zoekt to cancel + network latency`.</span></div></td></tr><tr><td class="line" data-line="162"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">var cancel context</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">CancelFunc</span></div></td></tr><tr><td class="line" data-line="163"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">ctx</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">cancel </span><span style="color:#657b83;">= </span><span style="color:#b58900;">contextWithoutDeadline</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">ctx</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="164"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">defer </span><span style="color:#b58900;">cancel</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="165"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="166"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="167"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">filePathPatterns</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#b58900;">HandleFilePathPatterns</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">args</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="168"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="169"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="170"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="171"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="172"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">t0 </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">time</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Now</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="173"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#b58900;">buildQuery</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">args</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">repoBranches</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">filePathPatterns</span><span style="color:#657b83;">, </span><span style="color:#b58900;">true</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="174"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="175"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="176"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="177"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="178"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">client </span><span style="color:#657b83;">:= </span><span style="color:#b58900;">getZoektClient</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoints</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="179"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">client</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Search</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">ctx</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">searchOpts</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="180"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="181"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="182"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="183"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#b58900;">since</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">t0</span><span style="color:#657b83;">) &gt;= </span><span style="color:#268bd2;">searchOpts</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">MaxWallTime </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="184"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">errNoResultsInTimeout</span></div></td></tr><tr><td class="line" data-line="185"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="186"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="187"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// We always return approximate results (limitHit true) unless we run the branch to perform a more complete search.</span></div></td></tr><tr><td class="line" data-line="188"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">limitHit </span><span style="color:#657b83;">= </span><span style="color:#b58900;">true</span></div></td></tr><tr><td class="line" data-line="189"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// If the previous indexed search did not return a substantial number of matching file candidates or count was</span></div></td></tr><tr><td class="line" data-line="190"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// manually specified, run a more complete and expensive search.</span></div></td></tr><tr><td class="line" data-line="191"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FileCount </span><span style="color:#859900;">&lt; </span><span style="color:#6c71c4;">10 </span><span style="color:#859900;">|| </span><span style="color:#268bd2;">args</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FileMatchLimit </span><span style="color:#859900;">!= </span><span style="color:#268bd2;">defaultMaxSearchResults </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="192"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">= </span><span style="color:#b58900;">buildQuery</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">args</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">repoBranches</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">filePathPatterns</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="193"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="194"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="195"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="196"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">client</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Search</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">ctx</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">q</span><span style="color:#657b83;">, </span><span style="color:#859900;">&amp;</span><span style="color:#268bd2;">searchOpts</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="197"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="198"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="199"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="200"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#b58900;">since</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">t0</span><span style="color:#657b83;">) &gt;= </span><span style="color:#268bd2;">searchOpts</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">MaxWallTime </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="201"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">errNoResultsInTimeout</span></div></td></tr><tr><td class="line" data-line="202"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="203"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#767676;">// This is the only place limitHit can be set false, meaning we covered everything.</span></div></td></tr><tr><td class="line" data-line="204"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">limitHit </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FilesSkipped</span><span style="color:#859900;">+</span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">ShardsSkipped </span><span style="color:#859900;">&gt; </span><span style="color:#6c71c4;">0</span></div></td></tr><tr><td class="line" data-line="205"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="206"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="207"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Files</span><span style="color:#657b83;">) </span><span style="color:#859900;">== </span><span style="color:#6c71c4;">0 </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="208"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">false</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="209"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="210"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="211"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">maxLineMatches </span><span style="color:#657b83;">:= </span><span style="color:#6c71c4;">25 </span><span style="color:#859900;">+ </span><span style="color:#268bd2;">k</span></div></td></tr><tr><td class="line" data-line="212"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">for </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">file </span><span style="color:#657b83;">:= </span><span style="color:#859900;">range </span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Files </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="213"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">file</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">LineMatches</span><span style="color:#657b83;">) </span><span style="color:#859900;">&gt; </span><span style="color:#268bd2;">maxLineMatches </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="214"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#268bd2;">file</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">LineMatches </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">file</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">LineMatches[</span><span style="color:#657b83;">:</span><span style="color:#268bd2;">maxLineMatches]</span></div></td></tr><tr><td class="line" data-line="215"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#268bd2;">limitHit </span><span style="color:#657b83;">= </span><span style="color:#b58900;">true</span></div></td></tr><tr><td class="line" data-line="216"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="217"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="218"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="219"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#268bd2;">resp</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Files</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">limitHit</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">partial</span><span style="color:#657b83;">, </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="220"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="221"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="222"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#b58900;">writeZip</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">ctx context</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Context</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">w io</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Writer</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">fileMatches []zoekt</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FileMatch</span><span style="color:#657b83;">) (</span><span style="color:#268bd2;">err </span><span style="color:#859900;">error</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="223"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">bytesWritten </span><span style="color:#657b83;">:= </span><span style="color:#6c71c4;">0</span></div></td></tr><tr><td class="line" data-line="224"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">span</span><span style="color:#657b83;">, </span><span style="color:#d33682;">_ </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">ot</span><span style="color:#657b83;">.</span><span style="color:#b58900;">StartSpanFromContext</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">ctx</span><span style="color:#657b83;">, </span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">WriteZip</span><span style="color:#839496;">&#34;</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="225"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">defer </span><span style="color:#268bd2;">func</span><span style="color:#657b83;">() {</span></div></td></tr><tr><td class="line" data-line="226"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">span</span><span style="color:#657b83;">.</span><span style="color:#b58900;">LogFields</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">log</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Int</span><span style="color:#657b83;">(</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">bytes_written</span><span style="color:#839496;">&#34;</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">bytesWritten</span><span style="color:#657b83;">))</span></div></td></tr><tr><td class="line" data-line="227"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">span</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Finish</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="228"></td><td class="code"><div><span style="color:#657b83;">	}()</span></div></td></tr><tr><td class="line" data-line="229"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="230"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">zw </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zip</span><span style="color:#657b83;">.</span><span style="color:#b58900;">NewWriter</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">w</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="231"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">defer </span><span style="color:#268bd2;">zw</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Close</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="232"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="233"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">for </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">match </span><span style="color:#657b83;">:= </span><span style="color:#859900;">range </span><span style="color:#268bd2;">fileMatches </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="234"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">mw</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">zw</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Create</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">match</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">FileName</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="235"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="236"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="237"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="238"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="239"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">n</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">mw</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Write</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">match</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Content</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="240"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="241"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#268bd2;">err</span></div></td></tr><tr><td class="line" data-line="242"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="243"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">bytesWritten </span><span style="color:#657b83;">+= </span><span style="color:#268bd2;">n</span></div></td></tr><tr><td class="line" data-line="244"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="245"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="246"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="247"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="248"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="249"></td><td class="code"><div><span style="color:#268bd2;">var errNoResultsInTimeout </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">errors</span><span style="color:#657b83;">.</span><span style="color:#b58900;">New</span><span style="color:#657b83;">(</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">no results found in specified timeout</span><span style="color:#839496;">&#34;</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="250"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="251"></td><td class="code"><div><span style="color:#767676;">// contextWithoutDeadline returns a context which will cancel if the cOld is</span></div></td></tr><tr><td class="line" data-line="252"></td><td class="code"><div><span style="color:#767676;">// canceled.</span></div></td></tr><tr><td class="line" data-line="253"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#b58900;">contextWithoutDeadline</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">cOld context</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Context</span><span style="color:#657b83;">) (</span><span style="color:#268bd2;">context</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Context</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">context</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">CancelFunc</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="254"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">cNew</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">cancel </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">context</span><span style="color:#657b83;">.</span><span style="color:#b58900;">WithCancel</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">context</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Background</span><span style="color:#657b83;">())</span></div></td></tr><tr><td class="line" data-line="255"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="256"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// Set trace context so we still get spans propagated</span></div></td></tr><tr><td class="line" data-line="257"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">cNew </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">trace</span><span style="color:#657b83;">.</span><span style="color:#b58900;">CopyContext</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">cNew</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">cOld</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="258"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="259"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#767676;">// Copy actor from cOld to cNew.</span></div></td></tr><tr><td class="line" data-line="260"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">cNew </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">actor</span><span style="color:#657b83;">.</span><span style="color:#b58900;">WithActor</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">cNew</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">actor</span><span style="color:#657b83;">.</span><span style="color:#b58900;">FromContext</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">cOld</span><span style="color:#657b83;">))</span></div></td></tr><tr><td class="line" data-line="261"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="262"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">go </span><span style="color:#268bd2;">func</span><span style="color:#657b83;">() {</span></div></td></tr><tr><td class="line" data-line="263"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">select </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="264"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">case &lt;-</span><span style="color:#268bd2;">cOld</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Done</span><span style="color:#657b83;">():</span></div></td></tr><tr><td class="line" data-line="265"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#767676;">// cancel the new context if the old one is done for some reason other than the deadline passing.</span></div></td></tr><tr><td class="line" data-line="266"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">if </span><span style="color:#268bd2;">cOld</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Err</span><span style="color:#657b83;">() </span><span style="color:#859900;">!= </span><span style="color:#268bd2;">context</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">DeadlineExceeded </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="267"></td><td class="code"><div><span style="color:#657b83;">				</span><span style="color:#b58900;">cancel</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="268"></td><td class="code"><div><span style="color:#657b83;">			}</span></div></td></tr><tr><td class="line" data-line="269"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">case &lt;-</span><span style="color:#268bd2;">cNew</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Done</span><span style="color:#657b83;">():</span></div></td></tr><tr><td class="line" data-line="270"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="271"></td><td class="code"><div><span style="color:#657b83;">	}()</span></div></td></tr><tr><td class="line" data-line="272"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="273"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#268bd2;">cNew</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">cancel</span></div></td></tr><tr><td class="line" data-line="274"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="275"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="276"></td><td class="code"><div><span style="color:#767676;">// atomicEndpoints allows us to update the endpoints used by our zoekt client.</span></div></td></tr><tr><td class="line" data-line="277"></td><td class="code"><div><span style="color:#268bd2;">type </span><span style="color:#b58900;">atomicEndpoints </span><span style="color:#268bd2;">struct </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="278"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">endpoints atomic</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">Value</span></div></td></tr><tr><td class="line" data-line="279"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="280"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="281"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#657b83;">(</span><span style="color:#268bd2;">a </span><span style="color:#859900;">*</span><span style="color:#268bd2;">atomicEndpoints</span><span style="color:#657b83;">) </span><span style="color:#b58900;">Endpoints</span><span style="color:#657b83;">() (</span><span style="color:#268bd2;">map[</span><span style="color:#859900;">string</span><span style="color:#268bd2;">]struct</span><span style="color:#657b83;">{}, </span><span style="color:#859900;">error</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="282"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">eps </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">a</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">endpoints</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Load</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="283"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">eps </span><span style="color:#859900;">== </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="284"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">nil</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">errors</span><span style="color:#657b83;">.</span><span style="color:#b58900;">New</span><span style="color:#657b83;">(</span><span style="color:#839496;">&#34;</span><span style="color:#2aa198;">endpoints have not been set</span><span style="color:#839496;">&#34;</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="285"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="286"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#268bd2;">eps</span><span style="color:#657b83;">.(</span><span style="color:#268bd2;">map[</span><span style="color:#859900;">string</span><span style="color:#268bd2;">]struct</span><span style="color:#657b83;">{}), </span><span style="color:#b58900;">nil</span></div></td></tr><tr><td class="line" data-line="287"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="288"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="289"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#657b83;">(</span><span style="color:#268bd2;">a </span><span style="color:#859900;">*</span><span style="color:#268bd2;">atomicEndpoints</span><span style="color:#657b83;">) </span><span style="color:#b58900;">Set</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoints []</span><span style="color:#859900;">string</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="290"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if !</span><span style="color:#268bd2;">a</span><span style="color:#657b83;">.</span><span style="color:#b58900;">needsUpdate</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoints</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="291"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return</span></div></td></tr><tr><td class="line" data-line="292"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="293"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="294"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">eps </span><span style="color:#657b83;">:= </span><span style="color:#859900;">make</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">map[</span><span style="color:#859900;">string</span><span style="color:#268bd2;">]struct</span><span style="color:#657b83;">{}, </span><span style="color:#859900;">len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoints</span><span style="color:#657b83;">))</span></div></td></tr><tr><td class="line" data-line="295"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">for </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">addr </span><span style="color:#657b83;">:= </span><span style="color:#859900;">range </span><span style="color:#268bd2;">endpoints </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="296"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#268bd2;">eps[addr] </span><span style="color:#657b83;">= </span><span style="color:#268bd2;">struct</span><span style="color:#657b83;">{}{}</span></div></td></tr><tr><td class="line" data-line="297"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="298"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">a</span><span style="color:#657b83;">.</span><span style="color:#268bd2;">endpoints</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Store</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">eps</span><span style="color:#657b83;">)</span></div></td></tr><tr><td class="line" data-line="299"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr><tr><td class="line" data-line="300"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="301"></td><td class="code"><div><span style="color:#268bd2;">func </span><span style="color:#657b83;">(</span><span style="color:#268bd2;">a </span><span style="color:#859900;">*</span><span style="color:#268bd2;">atomicEndpoints</span><span style="color:#657b83;">) </span><span style="color:#b58900;">needsUpdate</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoints []</span><span style="color:#859900;">string</span><span style="color:#657b83;">) </span><span style="color:#859900;">bool </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="302"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#268bd2;">old</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">err </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">a</span><span style="color:#657b83;">.</span><span style="color:#b58900;">Endpoints</span><span style="color:#657b83;">()</span></div></td></tr><tr><td class="line" data-line="303"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if </span><span style="color:#268bd2;">err </span><span style="color:#859900;">!= </span><span style="color:#b58900;">nil </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="304"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">true</span></div></td></tr><tr><td class="line" data-line="305"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="306"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">if len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">old</span><span style="color:#657b83;">) </span><span style="color:#859900;">!= len</span><span style="color:#657b83;">(</span><span style="color:#268bd2;">endpoints</span><span style="color:#657b83;">) {</span></div></td></tr><tr><td class="line" data-line="307"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">return </span><span style="color:#b58900;">true</span></div></td></tr><tr><td class="line" data-line="308"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="309"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="310"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">for </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">addr </span><span style="color:#657b83;">:= </span><span style="color:#859900;">range </span><span style="color:#268bd2;">endpoints </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="311"></td><td class="code"><div><span style="color:#657b83;">		</span><span style="color:#859900;">if </span><span style="color:#d33682;">_</span><span style="color:#657b83;">, </span><span style="color:#268bd2;">ok </span><span style="color:#657b83;">:= </span><span style="color:#268bd2;">old[addr]</span><span style="color:#657b83;">; </span><span style="color:#859900;">!</span><span style="color:#268bd2;">ok </span><span style="color:#657b83;">{</span></div></td></tr><tr><td class="line" data-line="312"></td><td class="code"><div><span style="color:#657b83;">			</span><span style="color:#859900;">return </span><span style="color:#b58900;">true</span></div></td></tr><tr><td class="line" data-line="313"></td><td class="code"><div><span style="color:#657b83;">		}</span></div></td></tr><tr><td class="line" data-line="314"></td><td class="code"><div><span style="color:#657b83;">	}</span></div></td></tr><tr><td class="line" data-line="315"></td><td class="code"><div></div></td></tr><tr><td class="line" data-line="316"></td><td class="code"><div><span style="color:#657b83;">	</span><span style="color:#859900;">return </span><span style="color:#b58900;">false</span></div></td></tr><tr><td class="line" data-line="317"></td><td class="code"><div><span style="color:#657b83;">}</span></div></td></tr></tbody></table>
